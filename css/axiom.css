/* ========================================================================= */
/* Axiom Framework Base Styles                                               */
/* Refactored for consistent variable usage                                  */
/* Depends on updated axiom_vars.css and colors_vars.css                     */
/* ========================================================================= */

/* --- Imports --- */
@import url("colors_vars.css");
@import url("axiom_vars.css");
@import url("_reset.css"); /* Keep the reset */

/* ========================================================================= */
/* Base HTML Element Styles                                                  */
/* ========================================================================= */

body {
    font-family: var(--a-font-family-sans);
    font-size: var(--a-font-size-base);
    line-height: var(--a-line-height-base);
    color: var(--a-color-on-surface);
    background-color: var(--a-color-surface);
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}

/* --- Headings --- */
h1, h2, h3, h4, h5, h6 {
    font-family: var(--a-font-family-sans);
    font-weight: var(--a-font-weight-bold);
    line-height: var(--a-line-height-heading); /* Use heading line height */
    margin-top: var(--a-heading-margin-top);
    margin-bottom: var(--a-heading-margin-bottom);
    padding: 0; /* Reset padding */
}

h1 { font-size: var(--a-font-size-h1); }
h2 { font-size: var(--a-font-size-h2); }
h3 { font-size: var(--a-font-size-h3); }
h4 { font-size: var(--a-font-size-h4); }
h5 { font-size: var(--a-font-size-h5); }
h6 { font-size: var(--a-font-size-h6); }

/* --- Paragraphs --- */
p {
    margin-top: 0;
    margin-bottom: var(--a-paragraph-margin-bottom);
    line-height: var(--a-line-height-base); /* Ensure base line height */
}

/* --- Links --- */
a {
    color: var(--a-color-primary);
    text-decoration: none;
    transition: color 0.2s ease-in-out; /* Add smooth transition */
}
a:hover, a:focus {
    color: var(--a-color-primary-container); /* Example hover state */
    text-decoration: underline;
}

/* --- Lists --- */
ul, ol {
    margin-top: 0;
    margin-bottom: var(--a-block-element-margin-bottom);
    padding-left: var(--a-space-large); /* Standard indent */
    line-height: var(--a-line-height-base);
}
ul { list-style: disc outside; }
ol { list-style: decimal outside; }

li {
    margin-bottom: var(--a-margin-small); /* Space between list items */
}
li > ul, li > ol {
    margin-top: var(--a-margin-small); /* Space before nested list */
    margin-bottom: 0; /* No extra space after nested list within li */
}

/* --- Definition Lists --- */
dl {
    margin-bottom: var(--a-block-element-margin-bottom);
}
dt {
    font-weight: var(--a-font-weight-bold);
    margin-top: var(--a-margin-base);
}
dt:first-child {
    margin-top: 0;
}
dd {
    margin-left: var(--a-space-large);
    margin-bottom: var(--a-margin-base);
}

/* --- Blockquotes --- */
blockquote {
    margin-left: var(--a-margin-small);
    margin-right: 0;
    margin-top: 0;
    margin-bottom: var(--a-block-element-margin-bottom);
    padding: var(--a-padding-medium);
    border-left: 4px solid var(--a-color-primary); /* Accent border */
    font-style: italic;
    background-color: var(--a-color-surface-variant); /* Subtle background */
    border-radius: 0 var(--a-border-radius-base) var(--a-border-radius-base) 0; /* Rounded corners */
}
blockquote p {
    margin-bottom: var(--a-paragraph-margin-bottom);
}
blockquote footer {
    font-style: normal;
    font-size: var(--a-font-size-small);
    color: var(--a-color-text-secondary); /* Assuming this variable exists */
    margin-top: var(--a-margin-small);
}
blockquote footer cite {
    font-style: normal; /* Cite usually isn't italic here */
}

/* --- Tables --- */
table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: var(--a-block-element-margin-bottom);
    border: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline); /* Add border to table */
    font-size: var(--a-font-size-base); /* Ensure consistent font size */
}
caption {
    padding: var(--a-padding-small);
    font-style: italic;
    caption-side: bottom;
    color: var(--a-color-text-secondary);
}
th, td {
    padding: var(--a-padding-small) var(--a-padding-base); /* Consistent padding */
    text-align: left;
    border: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline); /* Border for cells */
    vertical-align: top;
}
th {
    font-weight: var(--a-font-weight-bold);
    background-color: var(--a-color-surface-variant); /* Subtle header background */
}
thead th {
    border-bottom-width: calc(var(--a-border-width-base) * 2); /* Thicker bottom border for header */
}

/* --- Forms --- */
form {
    display: grid; /* Keep grid layout */
    grid-gap: var(--a-space-base); /* Use grid gap variable */
    margin-bottom: var(--a-block-element-margin-bottom);
}
fieldset {
    border: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
    border-radius: var(--a-border-radius-base);
    padding: var(--a-padding-large); /* Consistent padding */
    margin: var(--a-margin-medium) 0; /* Consistent vertical margin */
}
legend {
    font-weight: var(--a-font-weight-bold);
    padding: 0 var(--a-padding-small); /* Padding around legend text */
    margin-bottom: var(--a-margin-base); /* Space below legend */
}
label {
    display: block;
    margin-bottom: var(--a-margin-small);
    font-weight: var(--a-font-weight-bold); /* Bolder labels */
}
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea,
select {
    width: 100%;
    padding: var(--a-padding-small) var(--a-padding-base); /* Consistent padding */
    margin-bottom: var(--a-margin-base); /* Space below inputs */
    border: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
    border-radius: var(--a-border-radius-base);
    font-family: inherit;
    font-size: inherit;
    line-height: var(--a-line-height-base); /* Ensure consistent line height */
    background-color: var(--a-color-surface); /* Ensure background */
    color: var(--a-color-on-surface); /* Ensure text color */
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* Add transitions */
    min-width: var(--a-min-input-size); /* Keep min width */
}
textarea {
    resize: vertical;
    min-height: 100px; /* Example min height */
}
/* Focus state for inputs */
input:focus,
textarea:focus,
select:focus {
    outline: none;
    border-color: var(--a-color-primary); /* Highlight border */
    box-shadow: 0 0 0 2px var(--a-color-primary-focus-ring, hsla(var(--a-color-primary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 10%), 0.3)); /* Subtle focus ring */
}
/* Checkboxes and Radios */
input[type="checkbox"],
input[type="radio"] {
    margin-right: var(--a-margin-small);
    accent-color: var(--a-color-primary);
    width: auto; /* Override width: 100% */
    vertical-align: middle; /* Align with label text */
}
/* Add spacing for checkbox/radio labels */
label input[type="checkbox"],
label input[type="radio"] {
    margin-right: var(--a-space-small);
}

/* Form Grouping & Validation */
.form-group {
    margin-bottom: var(--a-margin-base); /* Space between form groups */
}
.form-group label {
    /* Styles specific to labels within form groups if needed */
}
.form-group input,
.form-group textarea,
.form-group select {
    margin-bottom: 0; /* Remove default margin when inside a group */
}
.validation-message {
    display: none; /* Hide by default */
    font-size: var(--a-font-size-small);
    color: var(--a-color-negative);
    margin-top: var(--a-margin-tiny);
}
/* Basic :invalid styling (can be enhanced with JS) */
input:invalid,
textarea:invalid,
select:invalid {
    border-color: var(--a-color-negative);
}
input:invalid + .validation-message, /* Show message for invalid sibling */
textarea:invalid + .validation-message,
select:invalid + .validation-message {
    display: block;
}
/* Optional: valid styling */
input:valid {
    /* border-color: var(--a-color-positive); */ /* Can be too noisy */
}

/* Form Actions (Buttons) */
.form-actions {
    text-align: right; /* Align buttons right */
    margin-top: var(--a-margin-medium);
    grid-column: 1 / -1; /* Span full width in grid */
}
.form-actions button,
.form-actions input[type="submit"],
.form-actions input[type="reset"],
.form-actions input[type="button"] {
    margin-left: var(--a-margin-small); /* Space between buttons */
    margin-bottom: 0; /* Remove bottom margin */
}
.form-actions button:first-child,
.form-actions input:first-child {
    margin-left: 0;
}

/* Inline labels adjustment */
fieldset.inline-labels .form-group {
    display: flex;
    align-items: center; /* Align label and input */
    gap: var(--a-space-base); /* Space between label and input */
    margin-bottom: var(--a-margin-base);
}
fieldset.inline-labels .form-group label {
    margin-bottom: 0; /* Remove bottom margin */
    flex-basis: 150px; /* Example fixed width for labels */
    flex-shrink: 0;
    text-align: right;
}
fieldset.inline-labels .form-group input,
fieldset.inline-labels .form-group textarea,
fieldset.inline-labels .form-group select {
    flex-grow: 1; /* Allow input to take remaining space */
}
fieldset.inline-labels .validation-message {
    flex-basis: 100%; /* Make validation message span full width below */
    margin-left: calc(150px + var(--a-space-base)); /* Align with input */
}

/* Responsive form layout */
@media (min-width: 768px) {
    form:not(:has(fieldset.inline-labels)) { /* Apply multi-column unless using inline labels */
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
    /* Make fieldsets span full width if needed */
    form fieldset {
        grid-column: 1 / -1;
    }
}


/* --- Images and Figures --- */
img {
    max-width: 100%;
    height: auto;
    vertical-align: middle; /* Prevents extra space below image */
    display: block; /* Prevent inline spacing issues */
}
figure {
    margin: 0 0 var(--a-block-element-margin-bottom) 0; /* Consistent bottom margin */
}
figcaption {
    font-size: var(--a-font-size-small);
    color: var(--a-color-text-secondary); /* Assuming variable exists */
    margin-top: var(--a-margin-small);
    text-align: center;
}

/* --- Code --- */
code {
    font-family: var(--a-font-family-mono);
    font-size: 0.9em; /* Slightly smaller than base */
    background-color: var(--a-color-code-bg);
    color: var(--a-color-on-code-bg); /* Add variable for text color on code bg */
    padding: var(--a-padding-tiny) var(--a-padding-small);
    border-radius: var(--a-border-radius-small);
    white-space: pre-wrap; /* Allow wrapping for inline code */
    word-break: break-word;
}
pre {
    font-family: var(--a-font-family-mono);
    font-size: 0.9em;
    background-color: var(--a-color-code-bg);
    color: var(--a-color-on-code-bg);
    padding: var(--a-padding-base); /* Use padding var */
    border-radius: var(--a-border-radius-base);
    overflow-x: auto; /* Keep horizontal scroll */
    margin-top: 0;
    margin-bottom: var(--a-block-element-margin-bottom);
    line-height: var(--a-line-height-base);
    border: 1px solid var(--a-color-outline); /* Add subtle border */
}
pre code {
    padding: 0; /* Reset padding */
    background-color: transparent; /* Reset background */
    border: none; /* Reset border */
    white-space: pre; /* Preserve whitespace from pre */
    word-break: normal; /* Don't break words in pre */
    display: block; /* Ensure block display */
    color: inherit; /* Inherit text color */
    font-size: inherit; /* Inherit font size */
}

/* --- Horizontal Rule --- */
hr {
    border: none;
    border-top: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
    margin: var(--a-margin-large) 0; /* Use margin vars for spacing */
}

/* --- Semantic Structure Elements --- */
main {
    /* Assuming full width by default, padding added via container or sections */
    padding: var(--a-padding-small) 0; /* Example vertical padding */
}
section {
    padding: var(--a-padding-small); /* Consistent section padding */
    max-width: 100%; /* Keep max width */
    overflow: hidden; /* Prevent content overflow */
}

section > :is(h1, h2, h3, h4, h5, h6):first-child {
    /* Your styles here */
    /* Example: Remove top margin */
    margin-top: 0;
}

.container > :is(h1, h2, h3, h4, h5, h6):first-child {
    /* Your styles here */
    /* Example: Remove top margin */
    margin-top: 0;
}



section > h1:first-child,
section > h2:first-child,
section > h3:first-child,
section > h4:first-child,
section > h5:first-child,
section > h6:first-child {
    /* Your styles here */
    /* Example: Remove top margin */
    margin-top: 0;
}

main > section:last-of-type {
    margin-bottom: 0;
}
article {
    /* Basic article has no border/bg by default */
    border: none;
    padding: 0; /* Padding comes from parent or content */
    margin-bottom: var(--a-block-element-margin-bottom); /* Space below article */
    display: flex; /* Keep flex if needed for internal layout */
    flex-direction: column;
}
article:last-child {
    margin-bottom: 0;
}
header {
    /* Specific styling for page/article/section headers */
    padding: var(--a-padding-base) 0; /* Vertical padding, no horizontal */
    margin-bottom: var(--a-margin-base); /* Space below header */
    border-bottom: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline); /* Subtle separator */
}
header:first-child {
    border-top: none;
}
footer {
    /* Specific styling for page/article/section footers */
    padding: var(--a-padding-base) 0; /* Vertical padding */
    margin-top: var(--a-margin-large); /* Space above footer */
    border-top: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline); /* Separator */
    color: var(--a-color-text-secondary);
    font-size: var(--a-font-size-small);
}
/* Specific header/footer within article/aside */
article > header, aside > header {
    padding: 0; /* Remove padding */
    margin-bottom: var(--a-margin-base);
    border: none; /* Remove border */
}
article > footer, aside > footer {
    padding: 0;
    margin-top: var(--a-margin-base);
    border: none;
}


/* ========================================================================= */
/* Component Styles                                                          */
/* ========================================================================= */

/* --- Buttons --- */
/* Base Button Style (applied to button tag and .button class) */
button,
a.button,
input[type="submit"],
input[type="button"],
input[type="reset"] {
    display: inline-flex; /* Use flex for icon alignment */
    align-items: center;
    justify-content: center;
    padding: var(--a-padding-small) var(--a-padding-base); /* Base padding */
    margin: var(--a-margin-tiny); /* Minimal margin around buttons */
    font-family: var(--a-font-family-sans);
    font-size: var(--a-font-size-base);
    font-weight: var(--a-font-weight-bold);
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    border: var(--a-border-width-base) var(--a-border-style-base) transparent; /* Transparent border by default */
    border-radius: var(--a-border-radius-base);
    cursor: pointer;
    user-select: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, transform 0.1s ease;
    vertical-align: middle; /* Align with text */
    line-height: var(--a-line-height-base); /* Match base line height */
    min-width: 100px; /* Keep min width */
}
/* Default Button Appearance (Primary) */
button,
a.button,
input[type="submit"],
input[type="button"],
.button-primary { /* Explicit primary class */
    color: var(--a-color-on-primary);
    background-color: var(--a-color-primary);
    border-color: var(--a-color-primary); /* Match border */
}
button:hover, button:focus,
a.button:hover, a.button:focus,
input[type="submit"]:hover, input[type="submit"]:focus,
input[type="button"]:hover, input[type="button"]:focus,
.button-primary:hover, .button-primary:focus {
    background-color: var(--a-color-primary-hover, hsl(var(--a-color-primary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%))); /* Slightly lighter/darker */
    border-color: var(--a-color-primary-hover, hsl(var(--a-color-primary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%)));
    color: var(--a-color-on-primary);
    text-decoration: none;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
button:active,
a.button:active,
input[type="submit"]:active,
input[type="button"]:active,
.button-primary:active {
    transform: translateY(1px);
    box-shadow: none;
}
/* Reset Button Specific */
input[type="reset"], .button-reset { /* Add optional class */
    color: var(--a-color-on-negative);
    background-color: var(--a-color-negative);
    border-color: var(--a-color-negative);
}
input[type="reset"]:hover, input[type="reset"]:focus,
.button-reset:hover, .button-reset:focus {
    background-color: var(--a-color-negative-hover, hsl(var(--a-color-negative-hue, 0), 70%, 40%)); /* Define hover color */
    border-color: var(--a-color-negative-hover, hsl(var(--a-color-negative-hue, 0), 70%, 40%));
    color: var(--a-color-on-negative);
}
/* Secondary Button */
.button-secondary {
    color: var(--a-color-on-secondary);
    background-color: var(--a-color-secondary);
    border-color: var(--a-color-secondary);
}
.button-secondary:hover, .button-secondary:focus {
    background-color: var(--a-color-secondary-hover, hsl(var(--a-color-secondary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%)));
    border-color: var(--a-color-secondary-hover, hsl(var(--a-color-secondary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%)));
    color: var(--a-color-on-secondary);
}
/* Tertiary Button */
.button-tertiary { /* Use class consistently */
    color: var(--a-color-on-tertiary);
    background-color: var(--a-color-tertiary);
    border-color: var(--a-color-tertiary);
}
.button-tertiary:hover, .button-tertiary:focus {
    background-color: var(--a-color-tertiary-hover, hsl(var(--a-color-tertiary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%)));
    border-color: var(--a-color-tertiary-hover, hsl(var(--a-color-tertiary-hue), var(--a-saturation-primary), calc(var(--a-brightness-primary) + 5%)));
    color: var(--a-color-on-tertiary);
}

/* Other Color Buttons (Complementary, Analogous) */
.button-complementary { background-color: var(--a-color-complementary); color: var(--a-color-on-complementary); border-color: var(--a-color-complementary); }
.button-complementary:hover, .button-complementary:focus { background-color: var(--a-color-complementary-hover); border-color: var(--a-color-complementary-hover); color: var(--a-color-on-complementary); }

.button-analogous-1 { background-color: var(--a-color-analogous-1); color: var(--a-color-on-analogous-1); border-color: var(--a-color-analogous-1); }
.button-analogous-1:hover, .button-analogous-1:focus { background-color: var(--a-color-analogous-1-hover); border-color: var(--a-color-analogous-1-hover); color: var(--a-color-on-analogous-1); }

.button-analogous-2 { background-color: var(--a-color-analogous-2); color: var(--a-color-on-analogous-2); border-color: var(--a-color-analogous-2); }
.button-analogous-2:hover, .button-analogous-2:focus { background-color: var(--a-color-analogous-2-hover); border-color: var(--a-color-analogous-2-hover); color: var(--a-color-on-analogous-2); }


/* Outline Button */
.button-outline {
    background-color: transparent;
    border-color: currentColor; /* Use text color for border */
    color: var(--a-color-primary); /* Default to primary text color */
}
.button-outline.button-primary { color: var(--a-color-primary); } /* Already default */
.button-outline.button-secondary { color: var(--a-color-secondary); }
.button-outline.button-tertiary { color: var(--a-color-tertiary); }
.button-outline.button-complementary { color: var(--a-color-complementary); }
.button-outline.button-analogous-1 { color: var(--a-color-analogous-1); }
.button-outline.button-analogous-2 { color: var(--a-color-analogous-2); }
.button-outline.button-negative { color: var(--a-color-negative); }
.button-outline.button-positive { color: var(--a-color-positive); }
/* Add other colors if needed */

.button-outline:hover, .button-outline:focus {
    background-color: currentColor; /* Fill with text color on hover */
    color: var(--a-color-surface); /* Change text color to contrast background */
    border-color: currentColor; /* Keep border color */
}
/* Specific hover text colors if needed, e.g., for primary outline hover */
.button-outline.button-primary:hover, .button-outline.button-primary:focus { color: var(--a-color-on-primary); }
.button-outline.button-secondary:hover, .button-outline.button-secondary:focus { color: var(--a-color-on-secondary); }
/* etc. */


/* Text Button (Link-style) */
.button-text { /* Use class instead of tag selector */
    background: none;
    border: none;
    padding: var(--a-padding-small) var(--a-padding-small); /* Less padding */
    font-weight: var(--a-font-weight-bold);
    color: var(--a-color-primary); /* Default to primary link color */
    text-decoration: none;
    box-shadow: none;
    min-width: auto; /* Remove min-width */
}
.button-text:hover, .button-text:focus {
    color: var(--a-color-primary-container);
    text-decoration: underline;
    background: none; /* Ensure no background on hover */
    box-shadow: none;
}
.button-text:active {
    transform: none;
}
/* Text button variants */
.button-text.button-secondary { color: var(--a-color-secondary); }
.button-text.button-tertiary { color: var(--a-color-tertiary); }
/* Add other color variants if needed */


/* Semantic Buttons */
.button-positive { background-color: var(--a-color-positive); color: var(--a-color-on-positive); border-color: var(--a-color-positive); }
.button-positive:hover, .button-positive:focus { background-color: var(--a-color-positive-hover); border-color: var(--a-color-positive-hover); color: var(--a-color-on-positive); }

.button-negative { background-color: var(--a-color-negative); color: var(--a-color-on-negative); border-color: var(--a-color-negative); }
.button-negative:hover, .button-negative:focus { background-color: var(--a-color-negative-hover); border-color: var(--a-color-negative-hover); color: var(--a-color-on-negative); }

.button-notice { background-color: var(--a-color-notice); color: var(--a-color-on-notice); border-color: var(--a-color-notice); }
.button-notice:hover, .button-notice:focus { background-color: var(--a-color-notice-hover); border-color: var(--a-color-notice-hover); color: var(--a-color-on-notice); }

.button-informative { background-color: var(--a-color-informative); color: var(--a-color-on-informative); border-color: var(--a-color-informative); }
.button-informative:hover, .button-informative:focus { background-color: var(--a-color-informative-hover); border-color: var(--a-color-informative-hover); color: var(--a-color-on-informative); }


/* Disabled Button */
button:disabled,
a.button:disabled, /* May not work directly, use class */
input[type="submit"]:disabled,
input[type="button"]:disabled,
input[type="reset"]:disabled,
.button-disabled { /* Use class for `a` tags */
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none; /* Prevent clicks */
    box-shadow: none;
    transform: none;
}

/* Button Sizes */
.button-small {
    padding: var(--a-padding-tiny) var(--a-padding-small);
    font-size: var(--a-font-size-small);
    min-width: auto;
}
.button-large {
    padding: var(--a-padding-base) var(--a-padding-large);
    font-size: var(--a-font-size-h5); /* Example large size */
}

/* Buttons with Icons */
button i, a.button i { /* Target icons within buttons */
    margin-right: var(--a-margin-small); /* Space between icon and text */
    font-size: 0.9em; /* Slightly smaller icon */
    line-height: inherit; /* Ensure icon aligns */
}
/* If icon is the only content (Icon Button) */
.button-icon {
    padding: var(--a-padding-small); /* Square padding */
    min-width: auto; /* Remove min-width */
}
.button-icon i {
    margin: 0; /* No margin if icon only */
    font-size: 1.2em; /* Make icon slightly larger */
}

/* Block Buttons */
.button-block {
    display: flex; /* Use flex to center content */
    width: 100%;
    justify-content: center;
}

/* Button Group - for styling containers holding buttons */
.button-group, .button-grid {
    display: flex;
    flex-wrap: wrap;
    gap: var(--a-space-small);
    margin-bottom: var(--a-block-element-margin-bottom);
}
/* Optional: Remove margin from buttons inside group */
.button-group button, .button-grid button {
    margin: 0;
}


/* --- Cards --- */
/* Uses article.card selector */
article.card {
    background-color: var(--a-color-surface);
    border: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
    border-radius: var(--a-border-radius-base);
    box-shadow: 0 1px 3px rgba(0,0,0,0.05), 0 1px 2px rgba(0,0,0,0.1); /* Example subtle shadow */
    padding: 0; /* Remove padding from article, apply to sections */
    margin-bottom: var(--a-block-element-margin-bottom);
    overflow: hidden; /* Ensure image corners are clipped */
    display: flex; /* Keep flex if needed */
    flex-direction: column;
    transition: box-shadow 0.2s ease-in-out;
}
article.card:hover {
    box-shadow: 0 4px 8px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.1); /* Slightly stronger shadow */
}
/* Card Sections */
.card-header, /* Use classes for sections */
.card-content,
.card-image,
.card-footer {
    padding: var(--a-padding-medium); /* Consistent padding for sections */
}
.card-header {
    font-size: var(--a-font-size-h4);
    font-weight: var(--a-font-weight-bold);
    padding-bottom: var(--a-padding-small); /* Less padding below header */
    border-bottom: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
}
.card-image {
    padding: 0; /* No padding around image */
    margin: 0;
    line-height: 0; /* Remove space below image */
}
.card-image img {
    border-radius: 0; /* Remove radius if inside */
    width: 100%;
}
.card-content {
    /* Styles for main content area */
}
.card-footer {
    padding-top: var(--a-padding-small); /* Less padding above footer */
    border-top: var(--a-border-width-base) var(--a-border-style-base) var(--a-color-outline);
    font-size: var(--a-font-size-small);
    color: var(--a-color-text-secondary);
    background-color: var(--a-color-surface-variant); /* Subtle footer background */
    text-align: right; /* Align footer content right */
}
.card-footer button {
    margin: 0; /* Reset margin for buttons in footer */
    margin-left: var(--a-margin-small);
}


/* --- Navigation (Navbar) --- */
.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--a-padding-small) var(--a-padding-base); /* Consistent padding */
    background-color: var(--a-color-primary-container); /* Example background */
    color: var(--a-color-on-primary-container);
    position: sticky; /* Keep sticky */
    top: 0;
    z-index: 1000;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}
/* Navbar Logo */
.navbar .logo {
    /* Styles defined elsewhere */
    padding-bottom: 0; /* Reset padding for navbar */
}
.navbar .logo .version {
    /* Styles defined elsewhere */
    position: static; /* Reset position for navbar */
    display: inline;
    margin-left: var(--a-margin-small);
}
/* Navbar Links */
.navbar .nav-links {
    display: flex;
    list-style: none;
    gap: var(--a-space-small); /* Gap between links */
    margin: 0;
    padding: 0;
}
.navbar .nav-links a {
    display: block;
    padding: var(--a-padding-small) var(--a-padding-base);
    color: var(--a-color-on-primary-container);
    text-decoration: none;
    font-weight: var(--a-font-weight-bold);
    border-radius: var(--a-border-radius-base);
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
}
.navbar .nav-links a:hover,
.navbar .nav-links a:focus {
    background-color: var(--a-color-primary);
    color: var(--a-color-on-primary);
    text-decoration: none;
}
/* Navbar Menu Toggle */
.navbar .menu-toggle {
    display: none; /* Hidden by default */
    flex-direction: column;
    justify-content: space-around; /* Space out bars */
    width: 28px; /* Size */
    height: 24px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1100; /* Above nav links */
}
.navbar .menu-toggle .bar {
    display: block;
    width: 100%;
    max-width: 40px;
    height: 2px; /* Bar thickness */
    background-color: var(--a-color-on-primary-container);
    border-radius: var(--a-border-radius-small);
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
/* Menu Toggle Open State */
.navbar .menu-toggle.open .bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg); /* Adjust translate based on height/spacing */
}
.navbar .menu-toggle.open .bar:nth-child(2) {
    opacity: 0;
}
.navbar .menu-toggle.open .bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg); /* Adjust translate */
}

/* Standalone Theme Toggle */
.navbar > button.theme-toggle {
    /* Styles defined elsewhere */
}

/* Responsive Navbar */
@media (max-width: 768px) { /* Use your breakpoint variable */
    .navbar .menu-toggle {
        display: flex; /* Show hamburger */
    }
    .navbar > button.theme-toggle {
        display: none; /* Hide standalone toggle */
    }
    .navbar .nav-links {
        display: none; /* Hide links by default */
        position: absolute;
        top: 100%; /* Position below navbar */
        right: 0;
        width: 100%; /* Full width */
        background-color: var(--a-color-primary-container);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        flex-direction: column;
        padding: var(--a-padding-base) 0; /* Vertical padding */
        gap: 0; /* Reset gap */
    }
    .navbar .nav-links.open {
        display: flex; /* Show when open */
    }
    .navbar .nav-links li {
        width: 100%;
        text-align: center;
    }
    .navbar .nav-links a {
        padding: var(--a-padding-base); /* Larger tap target */
        border-radius: 0; /* No radius in dropdown */
    }
    .navbar .nav-links a:hover,
    .navbar .nav-links a:focus {
        /* Keep hover consistent */
        background-color: var(--a-color-primary);
        color: var(--a-color-on-primary);
    }
    /* Optional: Mobile theme toggle inside menu */
    /* .navbar .nav-links .theme-toggle-mobile { display: block; ... } */
}


/* --- Grid System --- */
/* Base grid on main (optional default) */
main {
    display: grid;
    grid-template-columns: 1fr; /* Default single column */
    grid-gap: var(--a-grid-gutter);
}
/* Explicit Row Class */
.row {
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    grid-gap: var(--a-grid-gutter);
    margin-bottom: var(--a-block-element-margin-bottom); /* Space below rows */
    /* Remove negative margins and padding on children if using gap */
}
/* Column Span Classes */
.col-1 { grid-column: span 1; }
.col-2 { grid-column: span 2; }
.col-3 { grid-column: span 3; }
.col-4 { grid-column: span 4; }
.col-5 { grid-column: span 5; }
.col-6 { grid-column: span 6; }
.col-7 { grid-column: span 7; }
.col-8 { grid-column: span 8; }
.col-9 { grid-column: span 9; }
.col-10 { grid-column: span 10; }
.col-11 { grid-column: span 11; }
.col-12 { grid-column: span 12; }
/* Add responsive col-sm-*, col-md-*, etc. classes if needed */


/* --- Utility Classes --- */
.container {
    width: 100%;
    max-width: var(--a-layout-max-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--a-padding-medium); /* Use padding vars */
    padding-right: var(--a-padding-medium);
}
.full-bleed {
    width: 100vw; /* Span full viewport width */
    margin-left: 50%;
    transform: translateX(-50%);
    padding-left: 0 !important; /* Override padding */
    padding-right: 0 !important;
}
.full-bleed > .container {
    /* Ensure container within full-bleed keeps its padding */
    padding-left: var(--a-padding-medium);
    padding-right: var(--a-padding-medium);
}
header.full-bleed {
    padding-top: 0; /* Remove padding if needed */
    padding-bottom: 0;
    margin-bottom: 0;
    border-bottom: 0;
}
.centerfy { /* Center text and inline/inline-block children */
    text-align: center;
}
.centerfy > * { /* Center block children */
    margin-left: auto;
    margin-right: auto;
}

/* --- Hero Section --- */
section.hero {
    background-color: var(--a-color-primary-container); /* Base color */
    background-image: var(--a-gradient-primary); /* Gradient overlay */
    color: var(--a-color-on-primary-container);
    text-align: center;
    padding: var(--a-padding-xxlarge) var(--a-padding-medium); /* Use padding vars */
    margin-bottom: var(--a-margin-medium); /* Consistent spacing */
}
section.hero h1 {
    font-size: calc(var(--a-font-size-h1) * 1.2); /* Slightly larger hero H1 */
    margin-top: 0;
    margin-bottom: var(--a-margin-base); /* Space below H1 */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}
section.hero p {
    font-size: var(--a-font-size-h4); /* Larger paragraph */
    margin-bottom: var(--a-margin-large); /* More space below paragraph */
    max-width: 60ch; /* Limit line length for readability */
    margin-left: auto;
    margin-right: auto;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}
section.hero .button {
    margin: var(--a-margin-small); /* Space around buttons */
}

/* --- Footer --- */
/* Page Footer */
body > footer { /* More specific selector for main page footer */
    background-color: var(--a-color-surface-invert);
    color: var(--a-color-on-surface-invert);
    padding: var(--a-padding-medium);
    margin-top: var(--a-margin-large);
    text-align: center;
    font-size: var(--a-font-size-small);
}


/* ========================================================================= */
/* Component Styles (Continued)                                            */
/* ========================================================================= */

/* --- Alerts --- */
.alert {
    padding: var(--a-padding-base); /* Use padding var */
    margin-bottom: var(--a-block-element-margin-bottom);
    border: var(--a-border-width-base) solid; /* Use base width */
    border-radius: var(--a-border-radius-base);
    font-size: var(--a-font-size-base);
    border-left-width: 4px; /* Thicker left border for emphasis */
}
.alert-success {
    background-color: var(--a-color-positive-container);
    color: var(--a-color-on-positive-container);
    border-color: var(--a-color-positive);
}
.alert-error {
    background-color: var(--a-color-negative-container);
    color: var(--a-color-on-negative-container);
    border-color: var(--a-color-negative);
}
.alert-info { /* Renamed from notice? Assuming info */
    background-color: var(--a-color-informative-container);
    color: var(--a-color-on-informative-container);
    border-color: var(--a-color-informative);
}
.alert-warning { /* Add warning/notice style */
    background-color: var(--a-color-notice-container);
    color: var(--a-color-on-notice-container);
    border-color: var(--a-color-notice);
}


/* --- Breadcrumbs --- */
.breadcrumbs {
    font-size: var(--a-font-size-small);
    margin-bottom: var(--a-block-element-margin-bottom);
    padding: var(--a-padding-small) 0; /* Add some padding */
    border-bottom: 1px solid var(--a-color-outline); /* Subtle separator */
}
.breadcrumbs ol {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping */
    list-style: none;
    padding: 0;
    margin: 0;
    gap: var(--a-space-small); /* Gap between items */
}
.breadcrumbs li {
    margin-bottom: 0; /* Reset list item margin */
    display: inline-flex; /* Align items */
    align-items: center;
}
.breadcrumbs li::after {
    content: '/';
    margin-left: var(--a-space-small); /* Space before separator */
    color: var(--a-color-text-secondary);
    display: inline-block; /* Needed for margin */
}
.breadcrumbs li:last-child::after {
    content: ''; /* No separator after last item */
    margin-left: 0;
}
.breadcrumbs a {
    color: var(--a-color-primary);
    text-decoration: none;
}
.breadcrumbs a:hover, .breadcrumbs a:focus {
    text-decoration: underline;
}
.breadcrumbs [aria-current="page"] {
    color: var(--a-color-on-surface); /* Current page text color */
    font-weight: var(--a-font-weight-bold);
}

/* --- Tooltip --- */
.tooltip {
    position: relative;
    cursor: help; /* Indicate help available */
    border-bottom: 1px dotted currentColor; /* Subtle indicator */
}
.tooltip::after { /* Using ::after for tooltip content */
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%; /* Position above */
    left: 50%;
    transform: translateX(-50%) translateY(-var(--a-space-tiny)); /* Move slightly up */
    background-color: var(--a-color-surface-invert); /* Inverted colors */
    color: var(--a-color-on-surface-invert);
    padding: var(--a-padding-tiny) var(--a-padding-small);
    border-radius: var(--a-border-radius-small);
    white-space: nowrap;
    font-size: var(--a-font-size-small);
    z-index: 10; /* Ensure visibility */
    /* Hidden state */
    opacity: 0;
    visibility: hidden;
    pointer-events: none; /* Prevent interaction */
    transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
}
.tooltip:hover::after,
.tooltip:focus::after { /* Show on hover/focus */
    opacity: 1;
    visibility: visible;
}

/* --- Pagination --- */
.pagination {
    display: flex;
    justify-content: center;
    gap: var(--a-space-small);
    margin-top: var(--a-margin-medium);
    margin-bottom: var(--a-block-element-margin-bottom);
}
.pagination button {
    padding: var(--a-padding-small) var(--a-padding-base); /* Consistent padding */
    background-color: var(--a-color-surface);
    border: 1px solid var(--a-color-outline); /* Use outline color */
    border-radius: var(--a-border-radius-small);
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s;
    color: var(--a-color-primary); /* Use primary color for text */
    min-width: auto; /* Allow natural width */
    margin: 0; /* Reset margin */
}
.pagination button.active {
    background-color: var(--a-color-primary);
    color: var(--a-color-on-primary);
    border-color: var(--a-color-primary);
    cursor: default;
    font-weight: var(--a-font-weight-bold);
}
.pagination button:hover:not(:disabled):not(.active) {
    background-color: var(--a-color-primary-container);
    color: var(--a-color-on-primary-container);
    border-color: var(--a-color-primary-container);
}
.pagination button:focus {
    outline: 2px solid var(--a-color-primary);
    outline-offset: 1px;
    z-index: 1; /* Bring focus state above others */
}
.pagination button:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: var(--a-color-surface-variant);
    color: var(--a-color-text-secondary);
    border-color: var(--a-color-outline);
}

/* --- Toast Notifications --- */
.toast {
    position: fixed;
    bottom: var(--a-space-medium); /* Use space var */
    left: 50%;
    transform: translateX(-50%);
    min-width: 250px;
    max-width: 90%;
    padding: var(--a-padding-base); /* Use padding var */
    background-color: var(--a-color-surface-invert); /* Use inverted surface */
    color: var(--a-color-on-surface-invert);
    border-radius: var(--a-border-radius-base);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Stronger shadow */
    z-index: 2000; /* High z-index */
    opacity: 0; /* Hidden by default, JS handles visibility */
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
}
.toast.show { /* Class added by JS */
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0); /* Slide in */
}
.toast-success { background-color: var(--a-color-positive); color: var(--a-color-on-positive); }
.toast-error { background-color: var(--a-color-negative); color: var(--a-color-on-negative); }
.toast-info { background-color: var(--a-color-informative); color: var(--a-color-on-informative); }
.toast-warning { background-color: var(--a-color-notice); color: var(--a-color-on-notice); }


/* --- Accordion --- */
.accordion {
    margin-bottom: var(--a-block-element-margin-bottom);
}
.accordion > div { /* Each accordion item */
    border: 1px solid var(--a-color-outline);
    border-radius: var(--a-border-radius-base);
    margin-bottom: var(--a-margin-small); /* Space between items */
    overflow: hidden; /* Clip content when closed */
}
.accordion > div:last-child {
    margin-bottom: 0;
}
.accordion h4 { /* Heading containing the button */
    margin: 0;
    font-size: var(--a-font-size-h5); /* Slightly smaller heading */
}
.accordion button[aria-controls] { /* The button itself */
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: var(--a-padding-base); /* Use padding vars */
    background-color: var(--a-color-surface-variant); /* Subtle background */
    color: var(--a-color-on-surface-variant); /* Ensure contrast */
    border: none;
    border-radius: 0; /* No radius on button itself */
    font-family: inherit;
    font-size: inherit;
    font-weight: var(--a-font-weight-bold);
    text-align: left;
    cursor: pointer;
    transition: background-color 0.2s ease;
}
.accordion button[aria-controls]:hover,
.accordion button[aria-controls]:focus {
    background-color: var(--a-color-primary-container);
    color: var(--a-color-on-primary-container);
    outline: none; /* Style focus on parent div? */
}
.accordion button[aria-controls]::after { /* Indicator Arrow */
    content: '▼'; /* Down arrow */
    font-size: 0.8em;
    transition: transform 0.3s ease;
    transform: rotate(0deg);
    margin-left: var(--a-space-small);
}
.accordion button[aria-expanded="true"] {
    background-color: var(--a-color-surface); /* Match panel background when open? */
    color: var(--a-color-on-surface);
    border-bottom: 1px solid var(--a-color-outline); /* Separator when open */
}
.accordion button[aria-expanded="true"]::after {
    transform: rotate(-180deg); /* Point arrow up */
}
.accordion div[role="region"] { /* The content panel */
    padding: var(--a-padding-base); /* Use padding vars */
    background-color: var(--a-color-surface);
    color: var(--a-color-on-surface);
    border-top: none; /* Ensure no double border */
    /* Transition handled by JS/hidden attribute or max-height */
}
.accordion div[role="region"]:not([hidden]) {
    /* Add transition styles if using max-height */
    /* max-height: 500px; transition: max-height 0.3s ease-out; */
}


/* --- Tabs --- */
.tabs {
    margin-bottom: var(--a-block-element-margin-bottom);
}
.tabs [role="tablist"] {
    display: flex;
    gap: var(--a-space-tiny); /* Minimal gap */
    border-bottom: 2px solid var(--a-color-outline); /* Main underline */
    padding: 0;
    margin: 0 0 var(--a-margin-base) 0; /* Space below tablist */
    list-style: none;
}
.tabs [role="tab"] {
    padding: var(--a-padding-small) var(--a-padding-base);
    cursor: pointer;
    border: none;
    border-bottom: 2px solid transparent; /* Transparent border for spacing */
    margin-bottom: -2px; /* Overlap the main underline */
    background: none;
    color: var(--a-color-primary);
    font-weight: var(--a-font-weight-bold);
    font-size: var(--a-font-size-base);
    transition: border-color 0.2s ease, color 0.2s ease;
    position: relative; /* For focus outline */
}
.tabs [role="tab"]:hover,
.tabs [role="tab"]:focus {
    color: var(--a-color-primary-container);
    outline: none;
}
.tabs [role="tab"]:focus-visible::after { /* Focus indicator */
    content: '';
    position: absolute;
    bottom: 0; left: 0; right: 0;
    height: 2px;
    background-color: var(--a-color-primary);
}
.tabs [role="tab"][aria-selected="true"] {
    color: var(--a-color-on-surface); /* Active tab text color */
    border-bottom-color: var(--a-color-primary); /* Highlight active tab */
    font-weight: var(--a-font-weight-bold);
}
.tabs [role="tabpanel"] {
    padding: var(--a-padding-base) 0; /* Padding for tab content */
}
.tabs [role="tabpanel"][hidden] {
    display: none;
}


/* --- Dropdown Menu --- */
.dropdown {
    position: relative; /* Context for absolute positioning */
    display: inline-block; /* Or block depending on usage */
    margin-bottom: var(--a-block-element-margin-bottom);
}
.dropdown-toggle {
    /* Use standard button styles */
}
.dropdown-menu {
    display: none; /* Hidden by default */
    position: absolute;
    top: 100%; /* Position below toggle */
    left: 0; /* Align left */
    z-index: 1000; /* Ensure visibility */
    background: var(--a-color-surface);
    padding: var(--a-padding-small) 0; /* Vertical padding */
    border: 1px solid var(--a-color-outline);
    border-radius: var(--a-border-radius-base);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    min-width: 160px; /* Minimum width */
    list-style: none;
    margin: var(--a-space-tiny) 0 0 0; /* Small gap below toggle */
}
.dropdown-menu.show {
    display: block; /* Show menu */
}
/* Dropdown Items */
.dropdown-menu li {
    margin-bottom: 0; /* Reset list item margin */
}
.dropdown-menu a,
.dropdown-menu button { /* Can contain links or buttons */
    display: block;
    padding: var(--a-padding-small) var(--a-padding-base);
    color: var(--a-color-on-surface);
    text-decoration: none;
    white-space: nowrap;
    background: none;
    border: none;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: var(--a-font-size-base);
}
.dropdown-menu a:hover, .dropdown-menu a:focus,
.dropdown-menu button:hover, .dropdown-menu button:focus {
    background-color: var(--a-color-primary-container);
    color: var(--a-color-on-primary-container);
    text-decoration: none;
    outline: none;
}
.dropdown-menu li[role="separator"] {
    height: 1px;
    background-color: var(--a-color-outline);
    margin: var(--a-margin-tiny) 0;
    padding: 0;
}


/* --- Progress Bar --- */
.progress-bar {
    background: var(--a-color-surface-variant); /* Background track */
    border: 1px solid var(--a-color-outline);
    border-radius: var(--a-border-radius-large); /* More rounded */
    height: 20px; /* Example height */
    width: 100%;
    overflow: hidden;
    margin-top: var(--a-margin-small);
    margin-bottom: var(--a-block-element-margin-bottom);
}
.progress-bar .progress {
    height: 100%;
    background: var(--a-gradient-primary, var(--a-color-primary)); /* Use gradient if defined */
    width: 0%; /* Set by style or JS */
    transition: width 0.3s ease-out;
    border-radius: inherit; /* Inherit parent radius */
    display: flex; /* Allow text inside */
    align-items: center;
    justify-content: center;
    color: var(--a-color-on-primary);
    font-size: var(--a-font-size-small);
}